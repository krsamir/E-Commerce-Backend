{"version":3,"file":"static/js/155.1204a0e1.chunk.js","mappings":"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","sources":["Components/Admin/Components/Modals/ProfileImage.jsx","Components/Admin/Components/Modals/ProductImages.jsx","Components/Admin/Components/CreateProduct.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Grid,\r\n  Toolbar,\r\n  AppBar,\r\n  Dialog,\r\n  Button,\r\n  Typography,\r\n  Slide,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport UploadFileIcon from \"@mui/icons-material/UploadFile\";\r\nimport UploadIcon from \"@mui/icons-material/Upload\";\r\nimport \"../Style.css\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport DeleteIcon from \"@mui/icons-material/HighlightOff\";\r\nimport axios from \"axios\";\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ProfileImage(props) {\r\n  const { productId, imageData } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const [images, setImages] = useState([]);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      images.map((value) => URL.revokeObjectURL(value));\r\n    };\r\n  }, [images]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleUploadImages = (e) => {\r\n    const values = [...images];\r\n    setImages(values.concat(Array.from(e.target.files)));\r\n  };\r\n\r\n  const removeData = (i) => {\r\n    const value = [...images];\r\n    if (i === value.length - 1) {\r\n      setCounter((prevState) => prevState - 1);\r\n    }\r\n    value.splice(i, 1);\r\n    setImages(value);\r\n  };\r\n\r\n  const handleSaveImages = async () => {\r\n    const formData = new FormData();\r\n    images.map((_, i) => formData.append(\"myFile[]\", images[i]));\r\n    formData.append(\"ProductId\", productId);\r\n    await axios\r\n      .post(\"/product/images/profile\", formData)\r\n      .then((res) => {\r\n        if (res.data.status === 1) {\r\n          props.successToast(res.data.message, 2000);\r\n          setOpen(false);\r\n          setTimeout(() => {\r\n            props.history.push(\"/admin/home/products\");\r\n          }, 500);\r\n        } else if (res.data.status === 0) {\r\n          props.errorToast(res.data.message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        props.errorToast(\"Some issue while uploading Images.\");\r\n      });\r\n  };\r\n  const ImageUrl = images.map((image) => URL.createObjectURL(image));\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" component=\"span\" onClick={handleClickOpen}>\r\n        <UploadFileIcon />\r\n        {\"  \"}Upload Profile Image\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar sx={{ position: \"relative\" }}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n              Add Product Profile Image\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n          {/* <div > */}\r\n          <label\r\n            htmlFor=\"contained-button-file\"\r\n            className=\"imageUploadBox pointer\"\r\n          >\r\n            <div className=\"innerBox\">\r\n              <UploadIcon className=\"uploadIcon\" />\r\n            </div>\r\n            <input\r\n              name=\"myFile[]\"\r\n              accept=\"image/*\"\r\n              id=\"contained-button-file\"\r\n              multiple={false}\r\n              type=\"file\"\r\n              encType=\"multipart/form-data\"\r\n              onChange={handleUploadImages}\r\n              hidden\r\n            />\r\n            {/* <Button variant=\"contained\" component=\"span\">\r\n                <UploadFileIcon />\r\n                {\"  \"}Upload Product Images\r\n              </Button> */}\r\n          </label>\r\n          {imageData.length > 0 && (\r\n            <h3>&nbsp;&nbsp;&nbsp;&nbsp;Saved Images</h3>\r\n          )}\r\n          <div className=\"storedImage\">\r\n            {imageData.map(({ file, data, id }) => (\r\n              <img\r\n                key={file}\r\n                src={`data:image/*;base64,${data}`}\r\n                alt={file}\r\n                loading=\"lazy\"\r\n                className=\"demoImages\"\r\n              />\r\n            ))}\r\n          </div>\r\n          {/* </div> */}\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12} md={2}>\r\n              <div className=\"leftCounter\">\r\n                {counter > 0 && (\r\n                  <IconButton\r\n                    size=\"large\"\r\n                    aria-label=\"Left\"\r\n                    color=\"primary\"\r\n                    onClick={() => setCounter((prevState) => prevState - 1)}\r\n                  >\r\n                    <ChevronLeftIcon className=\"left\" />\r\n                  </IconButton>\r\n                )}\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={8}>\r\n              {ImageUrl.length > 0 && <h3>Uploaded Images</h3>}\r\n              <div className=\"imageBox\">\r\n                {ImageUrl.length > 0 && (\r\n                  <div className=\"imagesmallbox\">\r\n                    <img\r\n                      src={ImageUrl[counter]}\r\n                      className=\"displayImage\"\r\n                      alt=\"\"\r\n                    />\r\n                    {ImageUrl.length > 0 && (\r\n                      <div className=\"counter hor\">\r\n                        <div className=\"hor\" style={{ flex: 1 }}>\r\n                          {counter + 1}\r\n                          {\"  \"}\r\n                          <div> Of </div>\r\n                          {\"  \"}\r\n                          <span>{ImageUrl.length}</span>\r\n                        </div>\r\n                        <IconButton\r\n                          size=\"large\"\r\n                          aria-label=\"Left\"\r\n                          color=\"primary\"\r\n                          onClick={() => removeData(counter)}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {/* {images\r\n                  .map((image) => URL.createObjectURL(image))\r\n                  .map((value, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <img\r\n                          src={value}\r\n                          className=\"displayImage pointer\"\r\n                          alt=\"\"\r\n                          onClick={() => removeData(index)}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })} */}\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={2}>\r\n              <div className=\"rightCounter\">\r\n                {counter < ImageUrl.length - 1 && (\r\n                  <IconButton\r\n                    size=\"large\"\r\n                    aria-label=\"Left\"\r\n                    color=\"primary\"\r\n                    onClick={() => setCounter((prevState) => prevState + 1)}\r\n                  >\r\n                    <ChevronRightIcon className=\"right\" />\r\n                  </IconButton>\r\n                )}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <div\r\n              style={{\r\n                marginTop: \"20px\",\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ marginRight: \"20px\", marginBottom: \"20px\" }}\r\n                onClick={() =>\r\n                  props.history.push({\r\n                    pathname: \"/admin/home/products\",\r\n                    state: null,\r\n                  })\r\n                }\r\n              >\r\n                Redirect to Product Home\r\n              </Button>\r\n              {ImageUrl.length > 0 && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ marginLeft: \"20px\" }}\r\n                  onClick={handleSaveImages}\r\n                >\r\n                  Save Images\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Grid,\r\n  Toolbar,\r\n  AppBar,\r\n  Dialog,\r\n  Button,\r\n  Typography,\r\n  Slide,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport UploadFileIcon from \"@mui/icons-material/UploadFile\";\r\nimport UploadIcon from \"@mui/icons-material/Upload\";\r\nimport \"../Style.css\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport DeleteIcon from \"@mui/icons-material/HighlightOff\";\r\nimport axios from \"axios\";\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ProductImages(props) {\r\n  const { productId, imageData } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const [images, setImages] = useState([]);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      images.map((value) => URL.revokeObjectURL(value));\r\n    };\r\n  }, [images]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleUploadImages = (e) => {\r\n    const values = [...images];\r\n    setImages(values.concat(Array.from(e.target.files)));\r\n  };\r\n\r\n  const removeData = (i) => {\r\n    const value = [...images];\r\n    if (i === value.length - 1) {\r\n      setCounter((prevState) => prevState - 1);\r\n    }\r\n    value.splice(i, 1);\r\n    setImages(value);\r\n  };\r\n\r\n  const handleSaveImages = async () => {\r\n    const formData = new FormData();\r\n    images.map((_, i) => formData.append(\"myFile[]\", images[i]));\r\n    formData.append(\"ProductId\", productId);\r\n    await axios\r\n      .post(\"/product/images/all\", formData)\r\n      .then((res) => {\r\n        if (res.data.status === 1) {\r\n          props.successToast(res.data.message, 2000);\r\n          setOpen(false);\r\n          setTimeout(() => {\r\n            props.history.push(\"/admin/home/products\");\r\n          }, 500);\r\n        } else if (res.data.status === 0) {\r\n          props.errorToast(res.data.message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        props.errorToast(\"Some issue while uploading Images.\");\r\n      });\r\n  };\r\n  const ImageUrl = images.map((image) => URL.createObjectURL(image));\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" component=\"span\" onClick={handleClickOpen}>\r\n        <UploadFileIcon />\r\n        {\"  \"}Upload Product Images\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar sx={{ position: \"relative\" }}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n              Add Product Images\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n          <label\r\n            htmlFor=\"contained-button-file\"\r\n            className=\"imageUploadBox pointer\"\r\n          >\r\n            <div className=\"innerBox\">\r\n              <UploadIcon className=\"uploadIcon\" />\r\n            </div>\r\n            <input\r\n              name=\"myFile[]\"\r\n              accept=\"image/*\"\r\n              id=\"contained-button-file\"\r\n              multiple\r\n              type=\"file\"\r\n              encType=\"multipart/form-data\"\r\n              onChange={handleUploadImages}\r\n              hidden\r\n            />\r\n          </label>\r\n          {imageData.length > 0 && (\r\n            <h3>&nbsp;&nbsp;&nbsp;&nbsp;Saved Images</h3>\r\n          )}\r\n          <div className=\"storedImage\">\r\n            {imageData.map(({ file, data, id }) => (\r\n              <img\r\n                key={file}\r\n                src={`data:image/*;base64,${data}`}\r\n                alt={file}\r\n                loading=\"lazy\"\r\n                className=\"demoImages\"\r\n              />\r\n            ))}\r\n          </div>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12} md={2}>\r\n              <div className=\"leftCounter\">\r\n                {counter > 0 && (\r\n                  <IconButton\r\n                    size=\"large\"\r\n                    aria-label=\"Left\"\r\n                    color=\"primary\"\r\n                    onClick={() => setCounter((prevState) => prevState - 1)}\r\n                  >\r\n                    <ChevronLeftIcon className=\"left\" />\r\n                  </IconButton>\r\n                )}\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={8}>\r\n              {ImageUrl.length > 0 && <h3>Uploaded Images</h3>}\r\n              <div className=\"imageBox\">\r\n                {ImageUrl.length > 0 && (\r\n                  <div className=\"imagesmallbox\">\r\n                    <img\r\n                      src={ImageUrl[counter]}\r\n                      className=\"displayImage\"\r\n                      alt=\"\"\r\n                    />\r\n                    {ImageUrl.length > 0 && (\r\n                      <div className=\"counter hor\">\r\n                        <div className=\"hor\" style={{ flex: 1 }}>\r\n                          {counter + 1}\r\n                          {\"  \"}\r\n                          <div> Of </div>\r\n                          {\"  \"}\r\n                          <span>{ImageUrl.length}</span>\r\n                        </div>\r\n                        <IconButton\r\n                          size=\"large\"\r\n                          aria-label=\"Left\"\r\n                          color=\"primary\"\r\n                          onClick={() => removeData(counter)}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {/* {images\r\n                  .map((image) => URL.createObjectURL(image))\r\n                  .map((value, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <img\r\n                          src={value}\r\n                          className=\"displayImage pointer\"\r\n                          alt=\"\"\r\n                          onClick={() => removeData(index)}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })} */}\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={2}>\r\n              <div className=\"rightCounter\">\r\n                {counter < ImageUrl.length - 1 && (\r\n                  <IconButton\r\n                    size=\"large\"\r\n                    aria-label=\"Left\"\r\n                    color=\"primary\"\r\n                    onClick={() => setCounter((prevState) => prevState + 1)}\r\n                  >\r\n                    <ChevronRightIcon className=\"right\" />\r\n                  </IconButton>\r\n                )}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <div\r\n              style={{\r\n                marginTop: \"20px\",\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Button\r\n                style={{ marginRight: \"20px\", marginBottom: \"20px\" }}\r\n                variant=\"contained\"\r\n                onClick={() =>\r\n                  props.history.push({\r\n                    pathname: \"/admin/home/products\",\r\n                    state: null,\r\n                  })\r\n                }\r\n              >\r\n                Redirect to Product Home\r\n              </Button>\r\n              {ImageUrl.length > 0 && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ marginLeft: \"20px\" }}\r\n                  onClick={handleSaveImages}\r\n                >\r\n                  Save Images\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport { successToast, errorToast } from \"../../../Redux/Actions/ToastActions\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport \"./Style.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport ErrorIcon from \"@mui/icons-material/Error\";\r\nimport ProfileImage from \"./Modals/ProfileImage\";\r\nimport ProductImages from \"./Modals/ProductImages\";\r\nconst date = new Date();\r\nconst todayMinusOne = new Date(date.setDate(date.getDate() - 1)).toISOString();\r\nconst validationSchema = yup.object({\r\n  name: yup.string(\"Enter Name\").required(\"Name is required\"),\r\n  description: yup.string(\"Enter Description\"),\r\n  totalstocks: yup\r\n    .number(\"Enter Total Stocks in (numbers)\")\r\n    .required(\"No of total stocks is madatory field\"),\r\n  offerprice: yup.number(\"Enter Offer Price in (numbers)\"),\r\n  actualprice: yup\r\n    .number(\"Enter Actual Price in (numbers)\")\r\n    .required(\"Actual Price is a madatory field.\"),\r\n  keepinstocktill: yup\r\n    .date()\r\n    .min(todayMinusOne, \"Past dates cannot be selected.\"),\r\n  isActive: yup.boolean(\"Mention Active State\"),\r\n  color: yup.string(\"Enter Color\"),\r\n  itemsold: yup.number(\"Enter Item Sold in (numbers)\"),\r\n  material: yup.string(\"Enter Material\"),\r\n  productCode: yup.string(),\r\n  id: yup.number(),\r\n});\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography component={\"div\"}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction CreateProduct(props) {\r\n  const [categories, setCategories] = useState([]);\r\n  const [productId, setProductId] = useState(null);\r\n  const [categoriesMaster, setCategoriesMaster] = useState([]);\r\n  const [parsedImages, setParsedImages] = useState({ all: [], profile: [] });\r\n\r\n  useEffect(() => {\r\n    const getCategories = () => {\r\n      axios\r\n        .get(\"/product/category\")\r\n        .then((res) => {\r\n          setCategoriesMaster(\r\n            res.data.data.map(({ id, name }) => ({\r\n              value: name,\r\n              label: name,\r\n              id,\r\n            }))\r\n          );\r\n          if (res.data.status === 0) {\r\n            props.errorToast(res.data.message);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          props.errorToast(\"Issues while Fetching category.\");\r\n        });\r\n    };\r\n    getCategories();\r\n    return () => {};\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.location.state) {\r\n      const {\r\n        Categories,\r\n        // Images,\r\n        actualprice,\r\n        color,\r\n        description,\r\n        id,\r\n        isActive,\r\n        itemsold,\r\n        keepinstocktill,\r\n        material,\r\n        name,\r\n        offerprice,\r\n        productCode,\r\n        totalstocks,\r\n      } = props.location.state;\r\n      formik.setFieldValue(\"name\", name, true);\r\n      formik.setFieldValue(\"actualprice\", actualprice, true);\r\n      formik.setFieldValue(\"color\", color, true);\r\n      formik.setFieldValue(\"description\", description, true);\r\n      formik.setFieldValue(\"id\", id, true);\r\n      formik.setFieldValue(\"isActive\", isActive, true);\r\n      formik.setFieldValue(\"itemsold\", itemsold, true);\r\n      formik.setFieldValue(\"keepinstocktill\", keepinstocktill ?? \"\", true);\r\n      formik.setFieldValue(\"material\", material, true);\r\n      formik.setFieldValue(\"offerprice\", offerprice, true);\r\n      formik.setFieldValue(\"productCode\", productCode, true);\r\n      formik.setFieldValue(\"totalstocks\", totalstocks, true);\r\n      formik.setFieldValue(\"name\", name, true);\r\n      setCategories(\r\n        Categories.map(({ id, name }) => ({\r\n          value: name,\r\n          label: name,\r\n          id,\r\n        }))\r\n      );\r\n      setProductId(id);\r\n      getImages(id);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      totalstocks: \"\",\r\n      offerprice: \"\",\r\n      actualprice: \"\",\r\n      isActive: true,\r\n      keepinstocktill: \"\",\r\n      material: \"\",\r\n      color: \"\",\r\n      description: \"\",\r\n      itemsold: \"\",\r\n      productCode: \"\",\r\n      id: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      if (values.id === \"\") {\r\n        createProduct({\r\n          ...values,\r\n          keepinstocktill:\r\n            values.keepinstocktill === \"\" ? null : values.keepinstocktill,\r\n        });\r\n      } else {\r\n        updateProducts({\r\n          ...values,\r\n          keepinstocktill:\r\n            values.keepinstocktill === \"\" ? null : values.keepinstocktill,\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  const createProduct = async (values) => {\r\n    await axios\r\n      .post(\"/product/create\", values)\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          props.errorToast(res.data.message);\r\n        }\r\n        if (res.data.status === 1) {\r\n          props.successToast(res.data.message);\r\n          // setCategories({ ...categories, productId: res.data.data.id });\r\n          setProductId(res.data.data.id);\r\n          getImages(res.data.data.id);\r\n          setTabValue(1);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        props.errorToast(\"Some issue while creating the product.\");\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const getImages = async (id) => {\r\n    await axios\r\n      .get(`/product/images/${id}`)\r\n      .then((res) => {\r\n        setParsedImages(res.data);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const updateProducts = async (values) => {\r\n    await axios\r\n      .put(\"/product/update\", values)\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          props.errorToast(res.data.message);\r\n        }\r\n        if (res.data.status === 1) {\r\n          props.successToast(res.data.message);\r\n          setTabValue(1);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        props.errorToast(\"Some issue while updating the product.\");\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const handleCategoriesChange = (e, actionType) => {\r\n    setCategories(e);\r\n    if (actionType.action === \"select-option\") {\r\n      createCategories({\r\n        ProductId: productId,\r\n        CategoryId: actionType.option.id,\r\n      });\r\n    }\r\n    if (\r\n      actionType.action === \"remove-value\" ||\r\n      actionType.action === \"pop-value\"\r\n    ) {\r\n      deleteCategories({\r\n        ProductId: productId,\r\n        CategoryId: actionType.removedValue.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  const createCategories = async (data) => {\r\n    await axios\r\n      .post(\"/product/createProCat\", data)\r\n      .then((res) => {\r\n        if (res.data.status === 1) {\r\n          props.successToast(res.data.message);\r\n        } else {\r\n          props.errorToast(res.data.message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        props.errorToast(\"Some issue while adding category to this product.\");\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteCategories = async (data) => {\r\n    await axios\r\n      .post(\"/product/deleteProCat\", data)\r\n      .then((res) => {\r\n        if (res.data.status === 1) {\r\n          props.successToast(res.data.message);\r\n        } else {\r\n          props.errorToast(res.data.message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        props.errorToast(\"Some issue while adding category to this product.\");\r\n        console.log(e);\r\n      });\r\n  };\r\n  const [tabValue, setTabValue] = React.useState(0);\r\n\r\n  const handleChangeTab = async (event, newValue) => {\r\n    formik.setFieldTouched(\"name\");\r\n    formik.setFieldTouched(\"actualprice\");\r\n    formik.setFieldTouched(\"totalstocks\");\r\n    const data = await formik.validateForm();\r\n    if (Object.keys(data).length !== 0) {\r\n      props.errorToast(\"Please remove all the errors first!\");\r\n    } else if (productId === null) {\r\n      props.errorToast(\"Please save the product first\");\r\n    } else {\r\n      setTabValue(newValue);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handling Images\r\n   */\r\n\r\n  /**\r\n   * Creating Image Box\r\n   */\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ width: \"100%\" }}>\r\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n          <Tabs\r\n            value={tabValue}\r\n            onChange={handleChangeTab}\r\n            aria-label=\"basic tabs example\"\r\n          >\r\n            <Tab label=\"Product Details\" {...a11yProps(0)} />\r\n            <Tab label=\"Images & Categories\" {...a11yProps(1)} />\r\n          </Tabs>\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div style={{ marginTop: \"20px\" }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    value={formik.values.name}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.name && Boolean(formik.errors.name)}\r\n                    helperText={formik.touched.name && formik.errors.name}\r\n                    autoFocus={true}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"totalstocks\"\r\n                    name=\"totalstocks\"\r\n                    label=\"Total Stocks\"\r\n                    value={formik.values.totalstocks}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.totalstocks &&\r\n                      Boolean(formik.errors.totalstocks)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.totalstocks && formik.errors.totalstocks\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"offerprice\"\r\n                    name=\"offerprice\"\r\n                    label=\"Offer Price\"\r\n                    value={formik.values.offerprice}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.offerprice &&\r\n                      Boolean(formik.errors.offerprice)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.offerprice && formik.errors.offerprice\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"actualprice\"\r\n                    name=\"actualprice\"\r\n                    label=\"Actual Price\"\r\n                    value={formik.values.actualprice}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.actualprice &&\r\n                      Boolean(formik.errors.actualprice)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.actualprice && formik.errors.actualprice\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"material\"\r\n                    name=\"material\"\r\n                    label=\"Material\"\r\n                    value={formik.values.material}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.material && Boolean(formik.errors.material)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.material && formik.errors.material\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"color\"\r\n                    name=\"color\"\r\n                    label=\"color\"\r\n                    value={formik.values.color}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.color && Boolean(formik.errors.color)}\r\n                    helperText={formik.touched.color && formik.errors.color}\r\n                  />\r\n                </Grid>\r\n                {formik.values.id !== \"\" && (\r\n                  <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                    <TextField\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      id=\"itemsold\"\r\n                      name=\"itemsold\"\r\n                      label=\"Item Sold\"\r\n                      value={formik.values.itemsold}\r\n                      onChange={formik.handleChange}\r\n                      error={\r\n                        formik.touched.itemsold &&\r\n                        Boolean(formik.errors.itemsold)\r\n                      }\r\n                      helperText={\r\n                        formik.touched.itemsold && formik.errors.itemsold\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                {formik.values.id !== \"\" && (\r\n                  <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                    <TextField\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      id=\"productCode\"\r\n                      name=\"productCode\"\r\n                      label=\"Product Code\"\r\n                      value={formik.values.productCode}\r\n                      onChange={formik.handleChange}\r\n                      error={\r\n                        formik.touched.productCode &&\r\n                        Boolean(formik.errors.productCode)\r\n                      }\r\n                      helperText={\r\n                        formik.touched.productCode && formik.errors.productCode\r\n                      }\r\n                      disabled={true}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    label=\"Description\"\r\n                    type=\"description\"\r\n                    value={formik.values.description}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.description &&\r\n                      Boolean(formik.errors.description)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.description && formik.errors.description\r\n                    }\r\n                    multiline\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <label htmlFor=\"keepinstocktill\" className=\"detepickerLabel\">\r\n                    Keep In Stock Till\r\n                  </label>\r\n                  <br />\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"keepinstocktill\"\r\n                    id=\"keepinstocktill\"\r\n                    value={formik.values.keepinstocktill}\r\n                    onChange={formik.handleChange}\r\n                    className=\"datepickers\"\r\n                    min={new Date().toISOString().split(\"T\")[0]}\r\n                  />\r\n                  <div className=\"error\" style={{ color: \"#0e406a\" }}>\r\n                    <ErrorIcon style={{ paddingTop: \"5px\" }} />\r\n                    <span>\r\n                      Keep the field empty to keep product in stock forever.\r\n                    </span>\r\n                  </div>\r\n                  {formik.touched.keepinstocktill &&\r\n                    Boolean(formik.errors.keepinstocktill) && (\r\n                      <div className=\"error\">\r\n                        {formik.errors.keepinstocktill}\r\n                      </div>\r\n                    )}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <FormGroup>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          id=\"name\"\r\n                          name=\"isActive\"\r\n                          checked={formik.values.isActive}\r\n                          onChange={formik.handleChange}\r\n                        />\r\n                      }\r\n                      label=\"Is Active\"\r\n                    />\r\n                  </FormGroup>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <div\r\n              style={{\r\n                marginTop: \"20px\",\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() =>\r\n                  props.history.push({\r\n                    pathname: \"/admin/home/products\",\r\n                    state: \"\",\r\n                  })\r\n                }\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                style={{ marginLeft: \"20px\" }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <div className=\"image_categories\">\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Select\r\n                  options={categoriesMaster}\r\n                  value={categories}\r\n                  isMulti={true}\r\n                  isSearchable={true}\r\n                  onChange={handleCategoriesChange}\r\n                  isClearable={false}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <ProfileImage\r\n                  {...props}\r\n                  productId={productId}\r\n                  imageData={parsedImages.profile}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <ProductImages\r\n                  {...props}\r\n                  productId={productId}\r\n                  imageData={parsedImages.all}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </TabPanel>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\nexport default connect(null, {\r\n  successToast,\r\n  errorToast,\r\n})(CreateProduct);\r\n"],"names":["Transition","React","props","ref","Slide","direction","ProfileImage","productId","imageData","useState","open","setOpen","images","setImages","counter","setCounter","useEffect","map","value","URL","revokeObjectURL","handleClose","handleSaveImages","formData","FormData","_","i","append","axios","then","res","data","status","successToast","message","setTimeout","history","push","errorToast","catch","e","console","log","ImageUrl","image","createObjectURL","Button","variant","component","onClick","UploadFile","Dialog","fullScreen","onClose","TransitionComponent","AppBar","sx","position","Toolbar","IconButton","edge","color","Close","Typography","ml","flex","autoFocus","htmlFor","className","Upload","name","accept","id","multiple","type","encType","onChange","values","concat","Array","from","target","files","hidden","length","file","src","alt","loading","Grid","container","spacing","item","xs","sm","md","size","prevState","ChevronLeft","style","splice","removeData","ChevronRight","marginTop","display","justifyContent","marginRight","marginBottom","pathname","state","marginLeft","ProductImages","date","Date","todayMinusOne","setDate","getDate","toISOString","validationSchema","yup","required","description","totalstocks","offerprice","actualprice","keepinstocktill","min","isActive","itemsold","material","productCode","TabPanel","children","index","other","role","Box","p","a11yProps","connect","categories","setCategories","setProductId","categoriesMaster","setCategoriesMaster","all","profile","parsedImages","setParsedImages","label","location","Categories","formik","setFieldValue","getImages","useFormik","initialValues","onSubmit","createProduct","updateProducts","setTabValue","createCategories","deleteCategories","tabValue","handleChangeTab","event","newValue","setFieldTouched","validateForm","Object","keys","width","borderBottom","borderColor","Tabs","Tab","handleSubmit","lg","TextField","fullWidth","handleChange","error","touched","Boolean","errors","helperText","disabled","multiline","split","Error","paddingTop","FormGroup","FormControlLabel","control","Checkbox","checked","options","isMulti","isSearchable","actionType","action","ProductId","CategoryId","option","removedValue","isClearable"],"sourceRoot":""}