{"version":3,"file":"static/js/544.dfa1eb4c.chunk.js","mappings":"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","sources":["Components/Login-Register/ForgotPassword.jsx","Components/Login-Register/Login.jsx","Redux/Actions/ToastActions.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport axios from \"axios\";\r\nimport { successToast, errorToast } from \"../../Redux/Actions/ToastActions\";\r\nimport { connect } from \"react-redux\";\r\nfunction ForgotPassword(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [sentStatus, setSentStatus] = useState(false);\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [otpError, setOtpError] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [otpStatus, setOtpStatus] = useState(true);\r\n\r\n  const handleClickOpen = () => {\r\n    setEmail(\"\");\r\n    setOtp(\"\");\r\n    setSentStatus(false);\r\n    setOtpStatus(true);\r\n    setPassword(\"\");\r\n    setOtpError(\"\");\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseEvent = (event, reason) => {\r\n    if (reason === \"backdropClick\") {\r\n      return;\r\n    } else {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    await axios\r\n      .post(\"/auth/reset\", { email })\r\n      .then((res) => {\r\n        const data = res.data;\r\n        if (data.status === 0) {\r\n          props.errorToast(data.message);\r\n        }\r\n        if (data.status === 1) {\r\n          setSentStatus(true);\r\n          props.successToast(data.message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        props.errorToast(\"Some issue while Sending OTP.\");\r\n      });\r\n  };\r\n\r\n  const otpHandler = (e) => {\r\n    const value = e.target.value;\r\n    if (value.length <= 6) {\r\n      setOtp(e.target.value);\r\n      setOtpError(\"\");\r\n    }\r\n    if (e.target.value.length === 6) {\r\n      const data = { username: email, token: e.target.value };\r\n      setTimeout(async () => {\r\n        await axios\r\n          .post(\"/auth/reset/verify\", data)\r\n          .then((res) => {\r\n            setOtpStatus(true);\r\n            if (res.data.status === 0) {\r\n              setOtpError(res.data.message);\r\n              setOtp(\"\");\r\n              props.errorToast(res.data.message);\r\n            }\r\n            if (res.data.status === 1) {\r\n              props.successToast(\"Token Verification Successfull.\");\r\n              setOtpStatus(false);\r\n            }\r\n          })\r\n          .catch((e) => {\r\n            setOtpStatus(true);\r\n            console.log(e);\r\n            if (e.response.status === 429) {\r\n              props.errorToast(e.response.data);\r\n            } else {\r\n              props.errorToast(\"Some issue while OTP Verification!!\");\r\n            }\r\n          });\r\n      }, 200);\r\n    }\r\n  };\r\n\r\n  const handleApprove = async () => {\r\n    await axios\r\n      .post(\"/auth/reset/final\", { email, token: otp, password })\r\n      .then((response) => {\r\n        const res = response.data;\r\n        if (res.status === 1) {\r\n          props.successToast(res.message);\r\n          handleClose();\r\n        }\r\n        if (res.status === 0) {\r\n          props.errorToast(res.data.message, 3000);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"text\" onClick={handleClickOpen}>\r\n        Forgot Password ?\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseEvent}\r\n        disableEscapeKeyDown={true}\r\n      >\r\n        <DialogTitle>\r\n          {sentStatus ? \"Enter OTP\" : \"Forgot Password ?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {sentStatus\r\n              ? \"Please enter the OTP recieved in your email before it expires.\"\r\n              : \"Please provide your Email. An Otp will sent to the provided email-id.\"}\r\n          </DialogContentText>\r\n          {sentStatus ? (\r\n            <div>\r\n              <TextField\r\n                fullWidth\r\n                id=\"otp\"\r\n                label=\"Enter OTP\"\r\n                name=\"otp\"\r\n                value={otp}\r\n                onChange={otpHandler}\r\n                error={otpError.length > 0}\r\n                helperText={otpError}\r\n                style={{ marginTop: \"20px\" }}\r\n                inputProps={{ maxLength: 6 }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                value={password}\r\n                helperText={\"Password should be minimum 8 characters.\"}\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n                style={{ marginTop: \"20px\" }}\r\n                disabled={otpStatus}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Email Address\"\r\n              type=\"email\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n\r\n          {sentStatus ? (\r\n            <Button\r\n              onClick={handleApprove}\r\n              disabled={otpStatus && password.length < 8}\r\n            >\r\n              Approve\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={handleSend}>Send</Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, { successToast, errorToast })(ForgotPassword);\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport axios from \"axios\";\r\nimport { successToast, errorToast } from \"../../Redux/Actions/ToastActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\nfunction SignInSide(props) {\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    // eslint-disable-next-line no-console\r\n    const value = {\r\n      email: data.get(\"email\"),\r\n      password: data.get(\"password\"),\r\n    };\r\n    await axios\r\n      .post(\"/auth/login\", value)\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          props.errorToast(res.data.message);\r\n        }\r\n        if (res.data.status === 1) {\r\n          props.successToast(res.data.message);\r\n          const token = res.data.token;\r\n          const rid = res.data.rid;\r\n          window.localStorage.setItem(\"sid\", token);\r\n          window.localStorage.setItem(\"rid\", rid);\r\n          setTimeout(() => {\r\n            props.history.push(\"/\");\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        props.errorToast(\"Some issue while logging you in!!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\r\n        <CssBaseline />\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={4}\r\n          md={7}\r\n          sx={{\r\n            // backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundColor: (t) =>\r\n              t.palette.mode === \"light\"\r\n                ? t.palette.grey[50]\r\n                : t.palette.grey[900],\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n          }}\r\n        />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <Box\r\n            sx={{\r\n              my: 8,\r\n              mx: 4,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <Box\r\n              component=\"form\"\r\n              noValidate\r\n              onSubmit={handleSubmit}\r\n              sx={{ mt: 1 }}\r\n            >\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              {/* <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              /> */}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <ForgotPassword {...props} />\r\n                  {/* <Link href=\"#\" variant=\"body2\">\r\n                  </Link> */}\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"/register\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n              <Copyright sx={{ mt: 5 }} />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default connect(null, { successToast, errorToast })(SignInSide);\r\n","import { SUCCESS_TOAST, ERROR_TOAST } from \"./Actiontypes\";\r\n\r\nexport const successToast =\r\n  (message, duration = 6000) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: SUCCESS_TOAST,\r\n      payload: { message, duration },\r\n    });\r\n  };\r\n\r\nexport const errorToast =\r\n  (message, duration = 6000) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: ERROR_TOAST,\r\n      payload: { message, duration },\r\n    });\r\n  };\r\n"],"names":["connect","successToast","errorToast","props","useState","open","setOpen","sentStatus","setSentStatus","otp","setOtp","email","setEmail","otpError","setOtpError","password","setPassword","otpStatus","setOtpStatus","handleClose","handleSend","axios","then","res","data","status","message","catch","e","console","log","handleApprove","token","response","Button","variant","onClick","Dialog","onClose","event","reason","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","TextField","fullWidth","id","label","name","value","onChange","target","length","username","setTimeout","error","helperText","style","marginTop","inputProps","maxLength","disabled","autoFocus","margin","type","DialogActions","Copyright","Typography","color","align","Link","href","Date","getFullYear","theme","createTheme","handleSubmit","preventDefault","FormData","currentTarget","get","rid","window","localStorage","setItem","history","push","ThemeProvider","Grid","container","component","sx","height","CssBaseline","item","xs","sm","md","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","noValidate","onSubmit","mt","required","autoComplete","mb","duration","dispatch","SUCCESS_TOAST","payload","ERROR_TOAST"],"sourceRoot":""}