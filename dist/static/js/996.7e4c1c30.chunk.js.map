{"version":3,"file":"static/js/996.7e4c1c30.chunk.js","mappings":"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","sources":["Components/Admin/Components/CreateProduct.jsx","Redux/Actions/ToastActions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport { successToast, errorToast } from \"../../../Redux/Actions/ToastActions\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport \"./Style.css\";\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string(\"Enter Name\").required(\"Name is required\"),\r\n  description: yup.string(\"Enter Description\"),\r\n  totalstocks: yup\r\n    .number(\"Enter Total Stocks in (numbers)\")\r\n    .required(\"No of total stocks is madatory field\"),\r\n  offerprice: yup.number(\"Enter Offer Price in (numbers)\"),\r\n  actualprice: yup\r\n    .number(\"Enter Actual Price in (numbers)\")\r\n    .required(\"Actual Price is a madatory field.\"),\r\n  keepinstocktill: yup\r\n    .date()\r\n    .min(new Date().toISOString(), \"Past dates cannot be selected.\")\r\n    .required(\"This is a madatory field.\"),\r\n  isActive: yup.boolean(\"Mention Active State\"),\r\n  color: yup.string(\"Enter Color\"),\r\n  itemsold: yup.number(\"Enter Item Sold in (numbers)\"),\r\n  material: yup.string(\"Enter Material\"),\r\n  productCode: yup.string(),\r\n  id: yup.number(),\r\n});\r\n\r\nfunction CreateProduct(props) {\r\n  const today = new Date();\r\n  // new Date().toISOString()\r\n  console.log(today.getDate());\r\n  const [categories, setCategories] = useState({\r\n    productId: null,\r\n    category: [],\r\n  });\r\n  const Input = styled(\"input\")({\r\n    display: \"none\",\r\n  });\r\n  const [categoriesMaster, setCategoriesMaster] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/product/category\")\r\n      .then((res) => {\r\n        setCategoriesMaster(\r\n          res.data.data.map(({ id, name }) => ({\r\n            value: name,\r\n            label: name,\r\n            id,\r\n          }))\r\n        );\r\n        if (res.data.status === 0) {\r\n          props.errorToast(res.data.message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        props.errorToast(\"Issues while Fetching category.\");\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.location.state) {\r\n      const {\r\n        Categories,\r\n        // Images,\r\n        actualprice,\r\n        color,\r\n        description,\r\n        id,\r\n        isActive,\r\n        itemsold,\r\n        keepinstocktill,\r\n        material,\r\n        name,\r\n        offerprice,\r\n        productCode,\r\n        totalstocks,\r\n      } = props.location.state;\r\n      formik.setFieldValue(\"name\", name);\r\n      formik.setFieldValue(\"actualprice\", actualprice);\r\n      formik.setFieldValue(\"color\", color);\r\n      formik.setFieldValue(\"description\", description);\r\n      formik.setFieldValue(\"id\", id);\r\n      formik.setFieldValue(\"isActive\", isActive);\r\n      formik.setFieldValue(\"itemsold\", itemsold);\r\n      formik.setFieldValue(\"keepinstocktill\", keepinstocktill);\r\n      formik.setFieldValue(\"material\", material);\r\n      formik.setFieldValue(\"offerprice\", offerprice);\r\n      formik.setFieldValue(\"productCode\", productCode);\r\n      formik.setFieldValue(\"totalstocks\", totalstocks);\r\n      formik.setFieldValue(\"name\", name);\r\n      setCategories({\r\n        productId: id,\r\n        category: Categories.map(({ id, name }) => ({\r\n          value: name,\r\n          label: name,\r\n          id,\r\n        })),\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      totalstocks: \"\",\r\n      offerprice: \"\",\r\n      actualprice: \"\",\r\n      isActive: true,\r\n      keepinstocktill: \"\",\r\n      material: \"\",\r\n      color: \"\",\r\n      description: \"\",\r\n      itemsold: \"\",\r\n      productCode: \"\",\r\n      id: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      console.log(categories);\r\n      props.successToast(\"Testing toast\");\r\n      //   await axios\r\n      //     .post(\"/product/category\", values)\r\n      //     .then((res) => {\r\n      //       if (res.data.status === 0) {\r\n      //         toast.error(res.data.message, {\r\n      //           duration: 6000,\r\n      //           style: {\r\n      //             borderRadius: \"10px\",\r\n      //             background: \"#333\",\r\n      //             color: \"#fff\",\r\n      //           },\r\n      //         });\r\n      //       }\r\n      //       if (res.data.status === 1) {\r\n      //         toast.success(res.data.message, {\r\n      //           duration: 6000,\r\n      //           style: {\r\n      //             borderRadius: \"10px\",\r\n      //           },\r\n      //         });\r\n      //         gridApi?.applyTransaction({ add: [res.data.data] });\r\n      //         formik.resetForm();\r\n      //         handleClose();\r\n      //       }\r\n      //     })\r\n      //     .catch((e) => {\r\n      //       toast.error(\"Issues while Creating category.\", {\r\n      //         duration: 6000,\r\n      //         style: {\r\n      //           borderRadius: \"10px\",\r\n      //           background: \"#333\",\r\n      //           color: \"#fff\",\r\n      //         },\r\n      //       });\r\n      //       console.log(e);\r\n      //     });\r\n    },\r\n  });\r\n\r\n  const handleCategoriesChange = (e) => {\r\n    console.log(e);\r\n    setCategories({ ...categories, category: e });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Create/ Update Products</h3>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                label=\"Name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.name && Boolean(formik.errors.name)}\r\n                helperText={formik.touched.name && formik.errors.name}\r\n                autoFocus={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"totalstocks\"\r\n                name=\"totalstocks\"\r\n                label=\"Total Stocks\"\r\n                value={formik.values.totalstocks}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.totalstocks &&\r\n                  Boolean(formik.errors.totalstocks)\r\n                }\r\n                helperText={\r\n                  formik.touched.totalstocks && formik.errors.totalstocks\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"offerprice\"\r\n                name=\"offerprice\"\r\n                label=\"Offer Price\"\r\n                value={formik.values.offerprice}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.offerprice && Boolean(formik.errors.offerprice)\r\n                }\r\n                helperText={\r\n                  formik.touched.offerprice && formik.errors.offerprice\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"actualprice\"\r\n                name=\"actualprice\"\r\n                label=\"Actual Price\"\r\n                value={formik.values.actualprice}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.actualprice &&\r\n                  Boolean(formik.errors.actualprice)\r\n                }\r\n                helperText={\r\n                  formik.touched.actualprice && formik.errors.actualprice\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"material\"\r\n                name=\"material\"\r\n                label=\"Material\"\r\n                value={formik.values.material}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.material && Boolean(formik.errors.material)\r\n                }\r\n                helperText={formik.touched.material && formik.errors.material}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"color\"\r\n                name=\"color\"\r\n                label=\"color\"\r\n                value={formik.values.color}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.color && Boolean(formik.errors.color)}\r\n                helperText={formik.touched.color && formik.errors.color}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"itemsold\"\r\n                name=\"itemsold\"\r\n                label=\"Item Sold\"\r\n                value={formik.values.itemsold}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.itemsold && Boolean(formik.errors.itemsold)\r\n                }\r\n                helperText={formik.touched.itemsold && formik.errors.itemsold}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"productCode\"\r\n                name=\"productCode\"\r\n                label=\"Product Code\"\r\n                value={formik.values.productCode}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.productCode &&\r\n                  Boolean(formik.errors.productCode)\r\n                }\r\n                helperText={\r\n                  formik.touched.productCode && formik.errors.productCode\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                type=\"description\"\r\n                value={formik.values.description}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.description &&\r\n                  Boolean(formik.errors.description)\r\n                }\r\n                helperText={\r\n                  formik.touched.description && formik.errors.description\r\n                }\r\n                multiline\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <label htmlFor=\"keepinstocktill\" className=\"detepickerLabel\">\r\n                Keep In Stock Till\r\n              </label>\r\n              <br />\r\n              <input\r\n                type=\"date\"\r\n                name=\"keepinstocktill\"\r\n                id=\"keepinstocktill\"\r\n                value={formik.values.keepinstocktill}\r\n                onChange={formik.handleChange}\r\n                className=\"datepickers\"\r\n              />\r\n              {formik.touched.keepinstocktill &&\r\n                Boolean(formik.errors.keepinstocktill) && (\r\n                  <div className=\"error\">{formik.errors.keepinstocktill}</div>\r\n                )}\r\n              {/* <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"keepinstocktill\"\r\n                name=\"keepinstocktill\"\r\n                label=\"Keep In Stock Till\"\r\n                value={formik.values.keepinstocktill}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.keepinstocktill &&\r\n                  Boolean(formik.errors.keepinstocktill)\r\n                }\r\n                helperText={\r\n                  formik.touched.keepinstocktill &&\r\n                  formik.errors.keepinstocktill\r\n                }\r\n              /> */}\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      id=\"name\"\r\n                      name=\"isActive\"\r\n                      checked={formik.values.isActive}\r\n                      onChange={formik.handleChange}\r\n                    />\r\n                  }\r\n                  label=\"Is Active\"\r\n                />\r\n              </FormGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <div className=\"image_categories\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Input\r\n                  accept=\"image/*\"\r\n                  id=\"contained-button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => console.log(e.target.files)}\r\n                />\r\n                <Button variant=\"contained\" component=\"span\">\r\n                  Upload\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Select\r\n                options={categoriesMaster}\r\n                value={categories.category}\r\n                isMulti={true}\r\n                isSearchable={true}\r\n                onChange={handleCategoriesChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <div\r\n          style={{\r\n            marginTop: \"20px\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() =>\r\n              props.history.push({\r\n                pathname: \"/admin/home/products\",\r\n                state: \"\",\r\n              })\r\n            }\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            style={{ marginLeft: \"20px\" }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default connect(null, {\r\n  successToast,\r\n  errorToast,\r\n})(CreateProduct);\r\n","import { SUCCESS_TOAST, ERROR_TOAST } from \"./Actiontypes\";\r\n\r\nexport const successToast =\r\n  (message, duration = 6000) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: SUCCESS_TOAST,\r\n      payload: { message, duration },\r\n    });\r\n  };\r\n\r\nexport const errorToast =\r\n  (message, duration = 6000) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: ERROR_TOAST,\r\n      payload: { message, duration },\r\n    });\r\n  };\r\n"],"names":["validationSchema","yup","name","required","description","totalstocks","offerprice","actualprice","keepinstocktill","min","Date","toISOString","isActive","color","itemsold","material","productCode","id","connect","successToast","errorToast","props","today","console","log","getDate","useState","productId","category","categories","setCategories","Input","styled","display","categoriesMaster","setCategoriesMaster","useEffect","axios","then","res","data","map","value","label","status","message","catch","e","location","state","Categories","formik","setFieldValue","useFormik","initialValues","onSubmit","values","handleSubmit","style","marginTop","container","spacing","item","xs","sm","md","lg","fullWidth","variant","onChange","handleChange","error","touched","Boolean","errors","helperText","autoFocus","type","multiline","htmlFor","className","control","checked","accept","multiple","target","files","component","options","isMulti","isSearchable","justifyContent","onClick","history","push","pathname","marginLeft","duration","dispatch","SUCCESS_TOAST","payload","ERROR_TOAST"],"sourceRoot":""}