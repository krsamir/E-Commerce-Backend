{"version":3,"file":"static/js/479.061b716b.chunk.js","mappings":"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","sources":["Components/Login-Register/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport axios from \"axios\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(\"Name is mandatory field.\"),\r\n  username: yup\r\n    .string()\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  mobile: yup\r\n    .number()\r\n    .min(1000000000, \"Mobile number cannot be less than 10 digits\")\r\n    .max(9999999999, \"Mobile Number cannot be more than 10 digits.\")\r\n    .required(\"Mobile number is mandatory.\"),\r\n  password: yup\r\n    .string()\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignUp(props) {\r\n  const [isDisabled, setDisabledState] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      username: \"\",\r\n      mobile: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      const { username } = values;\r\n      setEmail(username);\r\n      await axios\r\n        .post(\"/auth/register\", values)\r\n        .then((response) => {\r\n          if (response.data.status === 1) {\r\n            toast.success(response.data.message, { duration: 6000 });\r\n            formik.resetForm();\r\n            setDisabledState(true);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          if (typeof e.response.data.reason === typeof []) {\r\n            toast(\r\n              () => (\r\n                <span>\r\n                  {e.response.data.reason.map((val, index) => (\r\n                    <div key={index}>{val}</div>\r\n                  ))}\r\n                </span>\r\n              ),\r\n              {\r\n                duration: 9000,\r\n                position: \"top-center\",\r\n                style: {\r\n                  borderRadius: \"10px\",\r\n                  background: \"#333\",\r\n                  color: \"#fff\",\r\n                },\r\n              }\r\n            );\r\n          } else {\r\n            toast.error(e.response.data.message, {\r\n              duration: 6000,\r\n              position: \"top-center\",\r\n              style: {\r\n                borderRadius: \"10px\",\r\n                background: \"#333\",\r\n                color: \"#fff\",\r\n              },\r\n            });\r\n          }\r\n        });\r\n    },\r\n  });\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [otpError, setOtpError] = useState(\"\");\r\n\r\n  const otpHandler = (e) => {\r\n    const value = e.target.value;\r\n    if (value.length <= 6) {\r\n      setOtp(e.target.value);\r\n      setOtpError(\"\");\r\n    }\r\n    if (e.target.value.length === 6) {\r\n      const data = { username: email, token: e.target.value };\r\n      setTimeout(async () => {\r\n        await axios\r\n          .post(\"/auth/verify\", data)\r\n          .then((res) => {\r\n            if (res.data.status === 0) {\r\n              setOtpError(res.data.message);\r\n              setOtp(\"\");\r\n              toast.error(res.data.message, { duration: 3000 });\r\n            }\r\n            if (res.data.status === 1) {\r\n              toast.success(\"Token Verification Successfull.\");\r\n              window.localStorage.setItem(\"sid\", res.data.token);\r\n              window.localStorage.setItem(\"rid\", res.data.rid);\r\n              setTimeout(() => {\r\n                props.history.push(\"/profile\");\r\n              }, 2000);\r\n            }\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n            if (e.response.status === 429) {\r\n              toast.error(e.response.data, { duration: 6000 });\r\n            } else {\r\n              toast.error(\"Some issue while OTP Verification!!\");\r\n            }\r\n          });\r\n      }, 200);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Toaster />\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box sx={{ mt: 3 }}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    name=\"name\"\r\n                    fullWidth\r\n                    id=\"name\"\r\n                    label=\"Full Name\"\r\n                    autoFocus\r\n                    value={formik.values.name}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.name && Boolean(formik.errors.name)}\r\n                    helperText={formik.touched.name && formik.errors.name}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    label=\"Email\"\r\n                    name=\"username\"\r\n                    value={formik.values.username}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.username && Boolean(formik.errors.username)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.username && formik.errors.username\r\n                    }\r\n                    disabled={isDisabled}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"mobile\"\r\n                    label=\"Mobile No\"\r\n                    name=\"mobile\"\r\n                    value={formik.values.mobile}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.mobile && Boolean(formik.errors.mobile)\r\n                    }\r\n                    helperText={formik.touched.mobile && formik.errors.mobile}\r\n                    disabled={isDisabled}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    value={formik.values.password}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.password && Boolean(formik.errors.password)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.password && formik.errors.password\r\n                    }\r\n                    disabled={isDisabled}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    name=\"confirmPassword\"\r\n                    label=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    id=\"confirmPassword\"\r\n                    value={formik.values.confirmPassword}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.confirmPassword &&\r\n                      Boolean(formik.errors.confirmPassword)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.confirmPassword &&\r\n                      formik.errors.confirmPassword\r\n                    }\r\n                    disabled={isDisabled}\r\n                  />\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                  }\r\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                />\r\n              </Grid> */}\r\n              </Grid>\r\n              {!isDisabled && (\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                  // disabled={}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n              )}\r\n              {isDisabled && (\r\n                <div style={{ marginTop: \"15px\" }}>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      id=\"otp\"\r\n                      label=\"Enter OTP\"\r\n                      name=\"otp\"\r\n                      value={otp}\r\n                      onChange={otpHandler}\r\n                      error={otpError.length > 0}\r\n                      helperText={otpError}\r\n                      inputProps={{ maxLength: 6 }}\r\n                    />\r\n                  </Grid>\r\n                </div>\r\n              )}\r\n              {!isDisabled && (\r\n                <Grid container justifyContent=\"flex-end\">\r\n                  <Grid item>\r\n                    <Link href=\"/login\" variant=\"body2\">\r\n                      Already have an account? Sign in\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </form>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 5 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"],"names":["validationSchema","yup","name","required","username","email","mobile","min","max","password","confirmPassword","oneOf","Copyright","props","variant","color","align","href","Date","getFullYear","theme","createTheme","SignUp","useState","isDisabled","setDisabledState","setEmail","formik","useFormik","initialValues","onSubmit","values","axios","then","response","data","status","toast","message","duration","resetForm","catch","e","reason","map","val","index","position","style","borderRadius","background","otp","setOtp","otpError","setOtpError","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","mt","handleSubmit","container","spacing","item","xs","fullWidth","id","label","autoFocus","value","onChange","handleChange","error","touched","Boolean","errors","helperText","disabled","type","mb","target","length","token","setTimeout","res","window","localStorage","setItem","rid","history","push","console","log","inputProps","maxLength","justifyContent"],"sourceRoot":""}