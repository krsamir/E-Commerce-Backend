{"version":3,"file":"static/js/57.2fa4ede1.chunk.js","mappings":"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","sources":["Components/Admin/Components/Ag_Grid_Utils/ActionRenderer.jsx","Components/Admin/Components/Category.jsx","Redux/Actions/ToastActions.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Button, TextField, Grid } from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport \"../Style.css\";\r\nimport axios from \"axios\";\r\nimport {\r\n  successToast,\r\n  errorToast,\r\n} from \"../../../../Redux/Actions/ToastActions\";\r\nimport { connect } from \"react-redux\";\r\nconst validationSchema = yup.object({\r\n  id: yup.number(),\r\n  name: yup.string(\"Enter Name\").required(\"Name is required\"),\r\n  description: yup\r\n    .string(\"Enter Description\")\r\n    .max(254, \"Cannot exceed more than 254 characters.\"),\r\n});\r\n\r\nfunction ActionRenderer(props) {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      id: null,\r\n      name: \"\",\r\n      description: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      await axios\r\n        .put(\"/product/category\", values)\r\n        .then((res) => {\r\n          if (res.data.status === 0) {\r\n            props.errorToast(res.data.message);\r\n          }\r\n          if (res.data.status === 1) {\r\n            props.successToast(res.data.message);\r\n            props?.api?.applyTransaction({ update: [values] });\r\n            formik.resetForm();\r\n            handleClose();\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          props.errorToast(\"Issues while editing category.\");\r\n          console.log(e);\r\n        });\r\n    },\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const [deleteId, setDeleteId] = useState(null);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpenDelete = (data) => {\r\n    setOpenDelete(true);\r\n    setDeleteId(data);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setOpenDelete(false);\r\n  };\r\n  const handleDelete = async () => {\r\n    if (deleteId) {\r\n      await axios\r\n        .delete(\"/product/category\", {\r\n          data: {\r\n            id: deleteId,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res.data.status === 0) {\r\n            props.errorToast(res.data.message);\r\n          }\r\n          if (res.data.status === 1) {\r\n            props.successToast(res.data.message);\r\n            props?.api.applyTransaction({ remove: [{ id: deleteId }] });\r\n            handleCloseDelete();\r\n            setDeleteId(null);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          props.errorToast(\"Issues while deleting category.\");\r\n          console.log(e);\r\n        });\r\n    } else {\r\n      props.errorToast(\"Issues while deleting category.\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (data) => {\r\n    handleClickOpen();\r\n    formik.setFieldValue(\"id\", props.data.id);\r\n    formik.setFieldValue(\"name\", props.data.name);\r\n    formik.setFieldValue(\"description\", props.data.description);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"icon hor pointer\">\r\n        <EditIcon onClick={() => handleEdit(props.data)} />\r\n        <DeleteIcon onClick={() => handleClickOpenDelete(props.data.id)} />\r\n        {/* Edit Dialog */}\r\n        <Dialog\r\n          fullScreen={fullScreen}\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <DialogTitle id=\"responsive-dialog-title\">\r\n              Edit Category\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div style={{ marginTop: \"20px\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      value={formik.values.name}\r\n                      onChange={formik.handleChange}\r\n                      error={formik.touched.name && Boolean(formik.errors.name)}\r\n                      helperText={formik.touched.name && formik.errors.name}\r\n                      autoFocus={true}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      label=\"Description\"\r\n                      type=\"description\"\r\n                      value={formik.values.description}\r\n                      onChange={formik.handleChange}\r\n                      error={\r\n                        formik.touched.description &&\r\n                        Boolean(formik.errors.description)\r\n                      }\r\n                      helperText={\r\n                        formik.touched.description && formik.errors.description\r\n                      }\r\n                      multiline\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button autoFocus onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\">Update</Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n        {/* Delete Dialog */}\r\n        <Dialog\r\n          open={openDelete}\r\n          onClose={handleCloseDelete}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Confirmation</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Are You sure you want to delete this category ?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleCloseDelete}>Cancel</Button>\r\n            <Button onClick={handleDelete}>Delete</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, { successToast, errorToast })(ActionRenderer);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, TextField, Grid } from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport \"./Style.css\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { AppConstant } from \"../../../Authentication/Constants\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport ActionRenderer from \"./Ag_Grid_Utils/ActionRenderer\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport axios from \"axios\";\r\nimport { successToast, errorToast } from \"../../../Redux/Actions/ToastActions\";\r\nimport { connect } from \"react-redux\";\r\nconst validationSchema = yup.object({\r\n  name: yup.string(\"Enter Name\").required(\"Name is required\"),\r\n  description: yup\r\n    .string(\"Enter Description\")\r\n    .max(254, \"Cannot exceed more than 254 characters.\"),\r\n});\r\n\r\nfunction Category(props) {\r\n  const [rowData, setrowData] = useState(undefined);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/product/category\")\r\n      .then((res) => {\r\n        setrowData(res.data.data);\r\n        if (res.data.status === 0) {\r\n          props.errorToast(res.data.message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        props.errorToast(\"Issues while Fetching category.\");\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const columnDefs = [\r\n    { headerName: \"Name\", field: \"name\" },\r\n    { headerName: \"Description\", field: \"description\" },\r\n    {\r\n      headerName: \"Actions\",\r\n      width: fullScreen ? 120 : 70,\r\n      pinned: \"right\",\r\n      cellRenderer: ActionRenderer,\r\n      resizable: false,\r\n      sortable: false,\r\n      filter: false,\r\n      // lockPosition: true,\r\n      suppressMovable: true,\r\n    },\r\n  ];\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      description: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      await axios\r\n        .post(\"/product/category\", values)\r\n        .then((res) => {\r\n          if (res.data.status === 0) {\r\n            props.errorToast(res.data.message);\r\n          }\r\n          if (res.data.status === 1) {\r\n            props.successToast(res.data.message);\r\n            gridApi?.applyTransaction({ add: [res.data.data] });\r\n            formik.resetForm();\r\n            handleClose();\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          props.errorToast(\"Issues while Creating category.\");\r\n          console.log(e);\r\n        });\r\n    },\r\n  });\r\n  const defaultColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n    resizable: true,\r\n    filterParams: {\r\n      buttons: [\"reset\"],\r\n      debounceMs: 200,\r\n    },\r\n  };\r\n  const onGridReady = (e) => {\r\n    e.api.sizeColumnsToFit();\r\n    setGridApi(e.api);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const gridOptions = {\r\n    pagination: true,\r\n    // frameworkComponents: { customTooltip: ErrorTooltip },\r\n    overlayNoRowsTemplate: \"<h3>No Data Available.</h3>\",\r\n    tooltipShowDelay: 0,\r\n  };\r\n  const getRowNodeId = (data) => data.id;\r\n  return (\r\n    <div>\r\n      <div className=\"hor\">\r\n        <h2 style={{ marginRight: \"20px\", flex: \"1\" }}>Category</h2>\r\n        <div className=\"hor createCategory\">\r\n          <Button variant=\"contained\" onClick={() => handleClickOpen()}>\r\n            <AddIcon /> {\"  \"} Create Category\r\n          </Button>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            id=\"search\"\r\n            name=\"Search\"\r\n            label=\"Search\"\r\n            onChange={(e) => gridApi?.setQuickFilter(e.target.value)}\r\n            autoFocus={true}\r\n            style={{ marginLeft: \"20px\" }}\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div\r\n          className={AppConstant.Theme}\r\n          style={{ height: 400, width: \"100%\", marginBottom: \"20px\" }}\r\n        >\r\n          <AgGridReact\r\n            rowData={rowData}\r\n            columnDefs={columnDefs}\r\n            defaultColDef={defaultColDef}\r\n            onGridReady={onGridReady}\r\n            animateRows={true}\r\n            gridOptions={gridOptions}\r\n            getRowNodeId={getRowNodeId}\r\n            paginationPageSize={10}\r\n          ></AgGridReact>\r\n        </div>\r\n        <Dialog\r\n          fullScreen={fullScreen}\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <DialogTitle id=\"responsive-dialog-title\">\r\n              Create Category\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div style={{ marginTop: \"20px\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      value={formik.values.name}\r\n                      onChange={formik.handleChange}\r\n                      error={formik.touched.name && Boolean(formik.errors.name)}\r\n                      helperText={formik.touched.name && formik.errors.name}\r\n                      autoFocus={true}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <TextField\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      label=\"Description\"\r\n                      type=\"description\"\r\n                      value={formik.values.description}\r\n                      onChange={formik.handleChange}\r\n                      error={\r\n                        formik.touched.description &&\r\n                        Boolean(formik.errors.description)\r\n                      }\r\n                      helperText={\r\n                        formik.touched.description && formik.errors.description\r\n                      }\r\n                      multiline\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button autoFocus onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\">Submit</Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, {\r\n  successToast,\r\n  errorToast,\r\n})(Category);\r\n","import { SUCCESS_TOAST, ERROR_TOAST } from \"./Actiontypes\";\r\n\r\nexport const successToast =\r\n  (message, duration = 6000) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: SUCCESS_TOAST,\r\n      payload: { message, duration },\r\n    });\r\n  };\r\n\r\nexport const errorToast =\r\n  (message, duration = 6000) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: ERROR_TOAST,\r\n      payload: { message, duration },\r\n    });\r\n  };\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"names":["validationSchema","yup","id","name","required","description","max","connect","successToast","errorToast","props","formik","useFormik","initialValues","onSubmit","values","axios","then","res","data","status","message","api","applyTransaction","update","resetForm","handleClose","catch","e","console","log","useState","open","setOpen","openDelete","setOpenDelete","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","deleteId","setDeleteId","handleCloseDelete","handleDelete","remove","handleEdit","setFieldValue","className","Edit","onClick","Delete","Dialog","onClose","handleSubmit","DialogTitle","DialogContent","style","marginTop","Grid","container","spacing","item","xs","sm","md","TextField","fullWidth","variant","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","autoFocus","type","multiline","DialogActions","Button","DialogContentText","undefined","rowData","setrowData","useEffect","gridApi","setGridApi","React","columnDefs","headerName","field","width","pinned","cellRenderer","ActionRenderer","resizable","sortable","filter","suppressMovable","add","marginRight","flex","Add","setQuickFilter","target","marginLeft","size","AppConstant","height","marginBottom","AgGridReact","defaultColDef","filterParams","buttons","debounceMs","onGridReady","sizeColumnsToFit","animateRows","gridOptions","pagination","overlayNoRowsTemplate","tooltipShowDelay","getRowNodeId","paginationPageSize","duration","dispatch","SUCCESS_TOAST","payload","ERROR_TOAST","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}