{"version":3,"file":"static/js/395.1dba8810.chunk.js","mappings":"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","sources":["Components/Admin/Routes.js","Components/Admin/Main.jsx"],"sourcesContent":["import React, { lazy, Suspense } from \"react\";\r\nimport ProtectedRoute from \"../../Authentication/ProtectedRoute\";\r\nimport { Switch, useRouteMatch } from \"react-router-dom\";\r\nimport { AppConstant } from \"../../Authentication/Constants\";\r\nconst Home = lazy(() => import(\"./Components/Home\"));\r\nconst Category = lazy(() => import(\"./Components/Category\"));\r\nconst Products = lazy(() => import(\"./Components/Products\"));\r\nconst CreateProduct = lazy(() => import(\"./Components/CreateProduct\"));\r\n\r\nfunction Routes() {\r\n  let { path } = useRouteMatch();\r\n  // const {\r\n  //   match: { url, path },\r\n  // } = props;\r\n  return (\r\n    <>\r\n      <Suspense fallback={<h2>Loading...</h2>}>\r\n        <Switch>\r\n          <ProtectedRoute\r\n            path={`${path}`}\r\n            component={Home}\r\n            hasAuthority={[AppConstant.ROLE.ADMIN]}\r\n            exact\r\n          />\r\n          <ProtectedRoute\r\n            path={`${path}/category`}\r\n            component={Category}\r\n            hasAuthority={[AppConstant.ROLE.ADMIN]}\r\n          />\r\n          <ProtectedRoute\r\n            path={`${path}/products`}\r\n            exact\r\n            component={Products}\r\n            hasAuthority={[AppConstant.ROLE.ADMIN]}\r\n          />\r\n          <ProtectedRoute\r\n            path={`${path}/products/new`}\r\n            component={CreateProduct}\r\n            hasAuthority={[AppConstant.ROLE.ADMIN]}\r\n          />\r\n          <ProtectedRoute\r\n            path={`${path}/products/edit`}\r\n            component={CreateProduct}\r\n            hasAuthority={[AppConstant.ROLE.ADMIN]}\r\n          />\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React, { useState } from \"react\";\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport MuiDrawer from \"@mui/material/Drawer\";\r\nimport MuiAppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport List from \"@mui/material/List\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport Routes from \"./Routes\";\r\nimport { Button } from \"@mui/material\";\r\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport Storage from \"@mui/icons-material/Storage\";\r\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\r\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\r\nconst drawerWidth = 240;\r\n\r\nconst openedMixin = (theme) => ({\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n  width: `calc(${theme.spacing(7)} + 1px)`,\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    width: `calc(${theme.spacing(9)} + 1px)`,\r\n  },\r\n});\r\n\r\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-end\",\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n}));\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== \"open\",\r\n})(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create([\"width\", \"margin\"], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {\r\n  shouldForwardProp: (prop) => prop !== \"open\",\r\n})(({ theme, open }) => ({\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: \"nowrap\",\r\n  boxSizing: \"border-box\",\r\n  ...(open && {\r\n    ...openedMixin(theme),\r\n    \"& .MuiDrawer-paper\": openedMixin(theme),\r\n  }),\r\n  ...(!open && {\r\n    ...closedMixin(theme),\r\n    \"& .MuiDrawer-paper\": closedMixin(theme),\r\n  }),\r\n}));\r\n\r\nexport default function AdminMain(props) {\r\n  // let { path } = useRouteMatch();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openMaster1, setOpenmaster1] = useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.clear();\r\n    window.location.reload();\r\n  };\r\n\r\n  const sideBarMenuMasters = [\r\n    {\r\n      path: \"/admin/home/products\",\r\n      name: \"Products\",\r\n    },\r\n    {\r\n      path: \"/admin/home/category\",\r\n      name: \"Category\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" open={open}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            sx={{\r\n              marginRight: \"36px\",\r\n              ...(open && { display: \"none\" }),\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <div style={{ display: \"flex\", flexDirection: \"row\", width: \"100%\" }}>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              style={{ flex: 1 }}\r\n              onClick={() => props.history.push(\"/admin/home\")}\r\n              className=\"pointer\"\r\n            >\r\n              Admin Dashboard\r\n            </Typography>\r\n            <Button variant=\"contained\" onClick={handleLogout}>\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer variant=\"permanent\" open={open}>\r\n        <DrawerHeader>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </DrawerHeader>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => setOpenmaster1(!openMaster1)}>\r\n            <ListItemIcon>\r\n              <PersonAddIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Masters\" />\r\n            {openMaster1 ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={openMaster1} timeout=\"auto\" unmountOnExit>\r\n            {sideBarMenuMasters.map(({ name, path }, ind) => (\r\n              <List component=\"div\" disablePadding key={ind}>\r\n                <Link\r\n                  to={path}\r\n                  className=\"links\"\r\n                  style={{ textDecoration: \"none\", color: \"black\" }}\r\n                >\r\n                  <ListItemButton sx={{ pl: 4 }}>\r\n                    <ListItemIcon>\r\n                      <Storage />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={name} />\r\n                  </ListItemButton>\r\n                </Link>\r\n              </List>\r\n            ))}\r\n          </Collapse>\r\n          {/* {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))} */}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\r\n        <DrawerHeader />\r\n        <Routes {...props} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["Home","lazy","Category","Products","CreateProduct","path","useRouteMatch","Suspense","fallback","ProtectedRoute","component","hasAuthority","AppConstant","exact","drawerWidth","openedMixin","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","styled","display","alignItems","justifyContent","padding","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","marginLeft","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","AdminMain","props","useTheme","React","setOpen","useState","openMaster1","setOpenmaster1","Box","sx","CssBaseline","position","Toolbar","IconButton","color","onClick","edge","marginRight","Menu","style","flexDirection","Typography","variant","noWrap","flex","history","push","className","Button","window","localStorage","clear","location","reload","direction","ChevronRight","ChevronLeft","Divider","List","ListItem","button","ListItemIcon","PersonAdd","ListItemText","primary","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","name","map","ind","disablePadding","to","textDecoration","ListItemButton","pl","Storage","text","index","Mail","flexGrow","p"],"sourceRoot":""}