{"version":3,"file":"static/js/419.9a98637b.chunk.js","mappings":"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","sources":["Components/Admin/Components/Products.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport \"./Style.css\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { AppConstant } from \"../../../Authentication/Constants\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport axios from \"axios\";\r\nimport { successToast, errorToast } from \"../../../Redux/Actions/ToastActions\";\r\nimport { connect } from \"react-redux\";\r\nfunction Products(props) {\r\n  const [rowData, setrowData] = useState(undefined);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/product/admin/getAllProduct\")\r\n      .then((res) => {\r\n        setrowData(res.data.data);\r\n        if (res.data.status === 0) {\r\n          props.errorToast(res.data.message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        props.errorToast(\"Issues while Fetching Product.\");\r\n        console.log(e);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const [gridApi, setGridApi] = useState(null);\r\n\r\n  const actionCellRenderer = (params) => {\r\n    return (\r\n      <div>\r\n        <EditIcon\r\n          className=\"pointer\"\r\n          onClick={() => {\r\n            props.history.push({\r\n              pathname: \"/admin/home/products/edit\",\r\n              state: params.data,\r\n            });\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const columnDefs = [\r\n    { headerName: \"Name\", field: \"name\", width: 250 },\r\n    { headerName: \"Total Stocks\", field: \"totalstocks\", width: 120 },\r\n    { headerName: \"Offer Price\", field: \"offerprice\", width: 120 },\r\n    { headerName: \"Actual Price\", field: \"actualprice\", width: 150 },\r\n    {\r\n      headerName: \"Keep in stock till\",\r\n      field: \"keepinstocktill\",\r\n      valueGetter: (params) => params.data.keepinstocktill ?? \"Always\",\r\n    },\r\n    {\r\n      headerName: \"Is Active\",\r\n      field: \"isActive\",\r\n      width: 100,\r\n      valueGetter: (params) => (params.data.isActive === true ? \"Yes\" : \"No\"),\r\n    },\r\n    { headerName: \"Color\", field: \"color\" },\r\n    { headerName: \"Items Sold\", field: \"itemsold\", width: 150 },\r\n    {\r\n      headerName: \"Categories\",\r\n      field: \"Categories\",\r\n      width: 250,\r\n      valueGetter: (params) => {\r\n        return params.data.Categories.map(({ name }) => name);\r\n      },\r\n    },\r\n    { headerName: \"Material\", field: \"material\", width: 150 },\r\n    { headerName: \"Product Code\", field: \"productCode\" },\r\n    { headerName: \"Description\", field: \"description\" },\r\n    { headerName: \"ID\", field: \"id\", width: 150 },\r\n    {\r\n      headerName: \"Created At\",\r\n      field: \"createdAt\",\r\n      valueGetter: (params) => new Date(params.data.createdAt).toLocaleString(),\r\n    },\r\n    { headerName: \"Created By\", field: \"createdby\" },\r\n    {\r\n      headerName: \"Actions\",\r\n      width: fullScreen ? 120 : 70,\r\n      pinned: \"right\",\r\n      //   cellRenderer: ProductCellRenderer,\r\n      cellRenderer: actionCellRenderer,\r\n      resizable: false,\r\n      sortable: false,\r\n      filter: false,\r\n      // lockPosition: true,\r\n      suppressMovable: true,\r\n    },\r\n  ];\r\n  const defaultColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n    resizable: true,\r\n    width: 200,\r\n    filterParams: {\r\n      buttons: [\"reset\"],\r\n      debounceMs: 200,\r\n    },\r\n  };\r\n  const onGridReady = (e) => {\r\n    setGridApi(e.api);\r\n  };\r\n  const handleCreateProduct = () => {\r\n    props.history.push(\"/admin/home/products/new\");\r\n    console.log(\"Redirect to new page\");\r\n  };\r\n\r\n  const gridOptions = {\r\n    pagination: true,\r\n    // frameworkComponents: { customTooltip: ErrorTooltip },\r\n    overlayNoRowsTemplate: \"<h3>No Data Available.</h3>\",\r\n    tooltipShowDelay: 0,\r\n  };\r\n\r\n  const getRowNodeId = (data) => data.id;\r\n  return (\r\n    <div>\r\n      <div className=\"hor\">\r\n        <h2 style={{ marginRight: \"20px\", flex: \"1\" }}>Products</h2>\r\n        <div className=\"hor createCategory\">\r\n          <Button variant=\"contained\" onClick={() => handleCreateProduct()}>\r\n            <AddIcon /> {\"  \"} Create Product\r\n          </Button>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            id=\"search\"\r\n            name=\"Search\"\r\n            label=\"Search\"\r\n            onChange={(e) => gridApi?.setQuickFilter(e.target.value)}\r\n            autoFocus={true}\r\n            style={{ marginLeft: \"20px\" }}\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div\r\n          className={AppConstant.Theme}\r\n          style={{ height: 400, width: \"100%\", marginBottom: \"20px\" }}\r\n        >\r\n          <AgGridReact\r\n            rowData={rowData}\r\n            columnDefs={columnDefs}\r\n            defaultColDef={defaultColDef}\r\n            onGridReady={onGridReady}\r\n            animateRows={true}\r\n            gridOptions={gridOptions}\r\n            getRowNodeId={getRowNodeId}\r\n            paginationPageSize={10}\r\n          ></AgGridReact>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, { successToast, errorToast })(Products);\r\n"],"names":["connect","successToast","errorToast","props","useState","undefined","rowData","setrowData","useEffect","axios","then","res","data","status","message","catch","e","console","log","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","gridApi","setGridApi","columnDefs","headerName","field","width","valueGetter","params","keepinstocktill","isActive","Categories","map","name","Date","createdAt","toLocaleString","pinned","cellRenderer","className","onClick","history","push","pathname","state","resizable","sortable","filter","suppressMovable","style","marginRight","flex","variant","id","label","onChange","setQuickFilter","target","value","autoFocus","marginLeft","size","AppConstant","height","marginBottom","AgGridReact","defaultColDef","filterParams","buttons","debounceMs","onGridReady","api","animateRows","gridOptions","pagination","overlayNoRowsTemplate","tooltipShowDelay","getRowNodeId","paginationPageSize"],"sourceRoot":""}