{"version":3,"file":"static/js/996.20c1ae61.chunk.js","mappings":"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","sources":["Components/Admin/Components/CreateProduct.jsx","Redux/Actions/ToastActions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { successToast, errorToast } from \"../../../Redux/Actions/ToastActions\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport \"./Style.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport ErrorIcon from \"@mui/icons-material/Error\";\r\nimport UploadFileIcon from \"@mui/icons-material/UploadFile\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport DeleteIcon from \"@mui/icons-material/HighlightOff\";\r\nconst date = new Date();\r\nconst todayMinusOne = new Date(date.setDate(date.getDate() - 1)).toISOString();\r\nconst validationSchema = yup.object({\r\n  name: yup.string(\"Enter Name\").required(\"Name is required\"),\r\n  description: yup.string(\"Enter Description\"),\r\n  totalstocks: yup\r\n    .number(\"Enter Total Stocks in (numbers)\")\r\n    .required(\"No of total stocks is madatory field\"),\r\n  offerprice: yup.number(\"Enter Offer Price in (numbers)\"),\r\n  actualprice: yup\r\n    .number(\"Enter Actual Price in (numbers)\")\r\n    .required(\"Actual Price is a madatory field.\"),\r\n  keepinstocktill: yup\r\n    .date()\r\n    .min(todayMinusOne, \"Past dates cannot be selected.\"),\r\n  isActive: yup.boolean(\"Mention Active State\"),\r\n  color: yup.string(\"Enter Color\"),\r\n  itemsold: yup.number(\"Enter Item Sold in (numbers)\"),\r\n  material: yup.string(\"Enter Material\"),\r\n  productCode: yup.string(),\r\n  id: yup.number(),\r\n});\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography component={\"div\"}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction CreateProduct(props) {\r\n  const [categories, setCategories] = useState([]);\r\n  const [productId, setProductId] = useState(null);\r\n  const Input = styled(\"input\")({\r\n    display: \"none\",\r\n  });\r\n  const [categoriesMaster, setCategoriesMaster] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCategories = () => {\r\n      axios\r\n        .get(\"/product/category\")\r\n        .then((res) => {\r\n          setCategoriesMaster(\r\n            res.data.data.map(({ id, name }) => ({\r\n              value: name,\r\n              label: name,\r\n              id,\r\n            }))\r\n          );\r\n          if (res.data.status === 0) {\r\n            props.errorToast(res.data.message);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          props.errorToast(\"Issues while Fetching category.\");\r\n        });\r\n    };\r\n    getCategories();\r\n    return () => {};\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  useEffect(() => {\r\n    return () => {\r\n      images.map((value) => URL.revokeObjectURL(value));\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.location.state) {\r\n      const {\r\n        Categories,\r\n        // Images,\r\n        actualprice,\r\n        color,\r\n        description,\r\n        id,\r\n        isActive,\r\n        itemsold,\r\n        keepinstocktill,\r\n        material,\r\n        name,\r\n        offerprice,\r\n        productCode,\r\n        totalstocks,\r\n      } = props.location.state;\r\n      formik.setFieldValue(\"name\", name, true);\r\n      formik.setFieldValue(\"actualprice\", actualprice, true);\r\n      formik.setFieldValue(\"color\", color, true);\r\n      formik.setFieldValue(\"description\", description, true);\r\n      formik.setFieldValue(\"id\", id, true);\r\n      formik.setFieldValue(\"isActive\", isActive, true);\r\n      formik.setFieldValue(\"itemsold\", itemsold, true);\r\n      formik.setFieldValue(\"keepinstocktill\", keepinstocktill ?? \"\", true);\r\n      formik.setFieldValue(\"material\", material, true);\r\n      formik.setFieldValue(\"offerprice\", offerprice, true);\r\n      formik.setFieldValue(\"productCode\", productCode, true);\r\n      formik.setFieldValue(\"totalstocks\", totalstocks, true);\r\n      formik.setFieldValue(\"name\", name, true);\r\n      setCategories(\r\n        Categories.map(({ id, name }) => ({\r\n          value: name,\r\n          label: name,\r\n          id,\r\n        }))\r\n      );\r\n      setProductId(id);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      totalstocks: \"\",\r\n      offerprice: \"\",\r\n      actualprice: \"\",\r\n      isActive: true,\r\n      keepinstocktill: \"\",\r\n      material: \"\",\r\n      color: \"\",\r\n      description: \"\",\r\n      itemsold: \"\",\r\n      productCode: \"\",\r\n      id: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      if (values.id === \"\") {\r\n        createProduct({\r\n          ...values,\r\n          keepinstocktill:\r\n            values.keepinstocktill === \"\" ? null : values.keepinstocktill,\r\n        });\r\n      } else {\r\n        updateProducts({\r\n          ...values,\r\n          keepinstocktill:\r\n            values.keepinstocktill === \"\" ? null : values.keepinstocktill,\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  const createProduct = async (values) => {\r\n    await axios\r\n      .post(\"/product/create\", values)\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          props.errorToast(res.data.message);\r\n        }\r\n        if (res.data.status === 1) {\r\n          props.successToast(res.data.message);\r\n          // setCategories({ ...categories, productId: res.data.data.id });\r\n          setProductId(res.data.data.id);\r\n          setTabValue(1);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        props.errorToast(\"Some issue while creating the product.\");\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateProducts = async (values) => {\r\n    await axios\r\n      .put(\"/product/update\", values)\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          props.errorToast(res.data.message);\r\n        }\r\n        if (res.data.status === 1) {\r\n          props.successToast(res.data.message);\r\n          setTabValue(1);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        props.errorToast(\"Some issue while updating the product.\");\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const handleCategoriesChange = (e, actionType) => {\r\n    setCategories(e);\r\n    if (actionType.action === \"select-option\") {\r\n      createCategories({\r\n        ProductId: productId,\r\n        CategoryId: actionType.option.id,\r\n      });\r\n    }\r\n    if (\r\n      actionType.action === \"remove-value\" ||\r\n      actionType.action === \"pop-value\"\r\n    ) {\r\n      deleteCategories({\r\n        ProductId: productId,\r\n        CategoryId: actionType.removedValue.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  const createCategories = async (data) => {\r\n    await axios\r\n      .post(\"/product/createProCat\", data)\r\n      .then((res) => {\r\n        if (res.data.status === 1) {\r\n          props.successToast(res.data.message);\r\n        } else {\r\n          props.errorToast(res.data.message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        props.errorToast(\"Some issue while adding category to this product.\");\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteCategories = async (data) => {\r\n    await axios\r\n      .post(\"/product/deleteProCat\", data)\r\n      .then((res) => {\r\n        if (res.data.status === 1) {\r\n          props.successToast(res.data.message);\r\n        } else {\r\n          props.errorToast(res.data.message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        props.errorToast(\"Some issue while adding category to this product.\");\r\n        console.log(e);\r\n      });\r\n  };\r\n  const [tabValue, setTabValue] = React.useState(0);\r\n\r\n  const handleChangeTab = async (event, newValue) => {\r\n    formik.setFieldTouched(\"name\");\r\n    formik.setFieldTouched(\"actualprice\");\r\n    formik.setFieldTouched(\"totalstocks\");\r\n    const data = await formik.validateForm();\r\n    if (Object.keys(data).length !== 0) {\r\n      props.errorToast(\"Please remove all the errors first!\");\r\n    } else if (productId === null) {\r\n      props.errorToast(\"Please save the product first\");\r\n    } else {\r\n      setTabValue(newValue);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handling Images\r\n   */\r\n  const handleUploadImages = (e) => {\r\n    const values = [...images];\r\n    setImages(values.concat(Array.from(e.target.files)));\r\n  };\r\n  const handleSaveImages = async () => {\r\n    console.log(images);\r\n    const formData = new FormData();\r\n    images.map((_, i) => formData.append(\"myFile[]\", images[i]));\r\n    formData.append(\"ProductId\", productId);\r\n    console.log(images[0]);\r\n\r\n    // await axios\r\n    //   .post(\"/product/images\", formData)\r\n    //   .then((res) => {\r\n    //     console.log(res.data);\r\n    //     props.successToast(res.data.message, 2000);\r\n    //   })\r\n    //   .catch((e) => {\r\n    //     console.log(e);\r\n    //     props.errorToast(\"Some issue while uploading Images.\");\r\n    //   });\r\n    // const file = [];\r\n    // for (let i = 0; i < images.length; i++) {\r\n    //   file[i] = new File(\r\n    //     [images[i]],\r\n    //     `${data.postId}+${Date.now()}+${images[i].name}`\r\n    //   );\r\n    // }\r\n  };\r\n  const [counter, setCounter] = useState(0);\r\n  const removeData = (i) => {\r\n    const value = [...images];\r\n    if (i === value.length - 1) {\r\n      setCounter((prevState) => prevState - 1);\r\n    }\r\n    value.splice(i, 1);\r\n    setImages(value);\r\n  };\r\n\r\n  /**\r\n   * Creating Image Box\r\n   */\r\n\r\n  const ImageUrl = images.map((image) => URL.createObjectURL(image));\r\n  return (\r\n    <div>\r\n      <Box sx={{ width: \"100%\" }}>\r\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n          <Tabs\r\n            value={tabValue}\r\n            onChange={handleChangeTab}\r\n            aria-label=\"basic tabs example\"\r\n          >\r\n            <Tab label=\"Product Details\" {...a11yProps(0)} />\r\n            <Tab label=\"Images & Categories\" {...a11yProps(1)} />\r\n          </Tabs>\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div style={{ marginTop: \"20px\" }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    value={formik.values.name}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.name && Boolean(formik.errors.name)}\r\n                    helperText={formik.touched.name && formik.errors.name}\r\n                    autoFocus={true}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"totalstocks\"\r\n                    name=\"totalstocks\"\r\n                    label=\"Total Stocks\"\r\n                    value={formik.values.totalstocks}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.totalstocks &&\r\n                      Boolean(formik.errors.totalstocks)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.totalstocks && formik.errors.totalstocks\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"offerprice\"\r\n                    name=\"offerprice\"\r\n                    label=\"Offer Price\"\r\n                    value={formik.values.offerprice}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.offerprice &&\r\n                      Boolean(formik.errors.offerprice)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.offerprice && formik.errors.offerprice\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"actualprice\"\r\n                    name=\"actualprice\"\r\n                    label=\"Actual Price\"\r\n                    value={formik.values.actualprice}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.actualprice &&\r\n                      Boolean(formik.errors.actualprice)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.actualprice && formik.errors.actualprice\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"material\"\r\n                    name=\"material\"\r\n                    label=\"Material\"\r\n                    value={formik.values.material}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.material && Boolean(formik.errors.material)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.material && formik.errors.material\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"color\"\r\n                    name=\"color\"\r\n                    label=\"color\"\r\n                    value={formik.values.color}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.color && Boolean(formik.errors.color)}\r\n                    helperText={formik.touched.color && formik.errors.color}\r\n                  />\r\n                </Grid>\r\n                {formik.values.id !== \"\" && (\r\n                  <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                    <TextField\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      id=\"itemsold\"\r\n                      name=\"itemsold\"\r\n                      label=\"Item Sold\"\r\n                      value={formik.values.itemsold}\r\n                      onChange={formik.handleChange}\r\n                      error={\r\n                        formik.touched.itemsold &&\r\n                        Boolean(formik.errors.itemsold)\r\n                      }\r\n                      helperText={\r\n                        formik.touched.itemsold && formik.errors.itemsold\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                {formik.values.id !== \"\" && (\r\n                  <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                    <TextField\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      id=\"productCode\"\r\n                      name=\"productCode\"\r\n                      label=\"Product Code\"\r\n                      value={formik.values.productCode}\r\n                      onChange={formik.handleChange}\r\n                      error={\r\n                        formik.touched.productCode &&\r\n                        Boolean(formik.errors.productCode)\r\n                      }\r\n                      helperText={\r\n                        formik.touched.productCode && formik.errors.productCode\r\n                      }\r\n                      disabled={true}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    label=\"Description\"\r\n                    type=\"description\"\r\n                    value={formik.values.description}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.description &&\r\n                      Boolean(formik.errors.description)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.description && formik.errors.description\r\n                    }\r\n                    multiline\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <label htmlFor=\"keepinstocktill\" className=\"detepickerLabel\">\r\n                    Keep In Stock Till\r\n                  </label>\r\n                  <br />\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"keepinstocktill\"\r\n                    id=\"keepinstocktill\"\r\n                    value={formik.values.keepinstocktill}\r\n                    onChange={formik.handleChange}\r\n                    className=\"datepickers\"\r\n                    min={new Date().toISOString().split(\"T\")[0]}\r\n                  />\r\n                  <div className=\"error\" style={{ color: \"#0e406a\" }}>\r\n                    <ErrorIcon style={{ paddingTop: \"5px\" }} />\r\n                    <span>\r\n                      Keep the field empty to keep product in stock forever.\r\n                    </span>\r\n                  </div>\r\n                  {formik.touched.keepinstocktill &&\r\n                    Boolean(formik.errors.keepinstocktill) && (\r\n                      <div className=\"error\">\r\n                        {formik.errors.keepinstocktill}\r\n                      </div>\r\n                    )}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <FormGroup>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          id=\"name\"\r\n                          name=\"isActive\"\r\n                          checked={formik.values.isActive}\r\n                          onChange={formik.handleChange}\r\n                        />\r\n                      }\r\n                      label=\"Is Active\"\r\n                    />\r\n                  </FormGroup>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <div\r\n              style={{\r\n                marginTop: \"20px\",\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() =>\r\n                  props.history.push({\r\n                    pathname: \"/admin/home/products\",\r\n                    state: \"\",\r\n                  })\r\n                }\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                style={{ marginLeft: \"20px\" }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <div className=\"image_categories\">\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Select\r\n                  options={categoriesMaster}\r\n                  value={categories}\r\n                  isMulti={true}\r\n                  isSearchable={true}\r\n                  onChange={handleCategoriesChange}\r\n                  isClearable={false}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <label htmlFor=\"contained-button-file\">\r\n                  <Input\r\n                    name=\"myFile[]\"\r\n                    accept=\"image/*\"\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    encType=\"multipart/form-data\"\r\n                    onChange={handleUploadImages}\r\n                  />\r\n                  <Button variant=\"contained\" component=\"span\">\r\n                    <UploadFileIcon />\r\n                    {\"  \"}Upload Product Images\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={2}>\r\n                <div className=\"leftCounter\">\r\n                  {counter > 0 && (\r\n                    <IconButton\r\n                      size=\"large\"\r\n                      aria-label=\"Left\"\r\n                      color=\"primary\"\r\n                      onClick={() => setCounter((prevState) => prevState - 1)}\r\n                    >\r\n                      <ChevronLeftIcon className=\"left\" />\r\n                    </IconButton>\r\n                  )}\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={8}>\r\n                <div className=\"imageBox\">\r\n                  {ImageUrl.length > 0 && (\r\n                    <div className=\"imagesmallbox\">\r\n                      <img\r\n                        src={ImageUrl[counter]}\r\n                        className=\"displayImage pointer\"\r\n                        alt=\"\"\r\n                      />\r\n                      {ImageUrl.length > 0 && (\r\n                        <div className=\"counter hor\">\r\n                          <div className=\"hor\" style={{ flex: 1 }}>\r\n                            {counter + 1}\r\n                            {\"  \"}\r\n                            <div> Of </div>\r\n                            {\"  \"}\r\n                            <span>{ImageUrl.length}</span>\r\n                          </div>\r\n                          <IconButton\r\n                            size=\"large\"\r\n                            aria-label=\"Left\"\r\n                            color=\"primary\"\r\n                            onClick={() => removeData(counter)}\r\n                          >\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* {images\r\n                  .map((image) => URL.createObjectURL(image))\r\n                  .map((value, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <img\r\n                          src={value}\r\n                          className=\"displayImage pointer\"\r\n                          alt=\"\"\r\n                          onClick={() => removeData(index)}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })} */}\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={2}>\r\n                <div className=\"rightCounter\">\r\n                  {counter < ImageUrl.length - 1 && (\r\n                    <IconButton\r\n                      size=\"large\"\r\n                      aria-label=\"Left\"\r\n                      color=\"primary\"\r\n                      onClick={() => setCounter((prevState) => prevState + 1)}\r\n                    >\r\n                      <ChevronRightIcon className=\"right\" />\r\n                    </IconButton>\r\n                  )}\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <div\r\n                  style={{\r\n                    marginTop: \"20px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={() =>\r\n                      props.history.push({\r\n                        pathname: \"/admin/home/products\",\r\n                        state: null,\r\n                      })\r\n                    }\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    style={{ marginLeft: \"20px\" }}\r\n                    onClick={handleSaveImages}\r\n                  >\r\n                    Save Images\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </TabPanel>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\nexport default connect(null, {\r\n  successToast,\r\n  errorToast,\r\n})(CreateProduct);\r\n","import { SUCCESS_TOAST, ERROR_TOAST } from \"./Actiontypes\";\r\n\r\nexport const successToast =\r\n  (message, duration = 6000) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: SUCCESS_TOAST,\r\n      payload: { message, duration },\r\n    });\r\n  };\r\n\r\nexport const errorToast =\r\n  (message, duration = 6000) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: ERROR_TOAST,\r\n      payload: { message, duration },\r\n    });\r\n  };\r\n"],"names":["date","Date","todayMinusOne","setDate","getDate","toISOString","validationSchema","yup","name","required","description","totalstocks","offerprice","actualprice","keepinstocktill","min","isActive","color","itemsold","material","productCode","id","TabPanel","props","children","value","index","other","role","hidden","sx","p","component","a11yProps","connect","successToast","errorToast","useState","categories","setCategories","productId","setProductId","Input","styled","display","categoriesMaster","setCategoriesMaster","images","setImages","useEffect","axios","then","res","data","map","label","status","message","catch","e","console","log","URL","revokeObjectURL","location","state","Categories","formik","setFieldValue","useFormik","initialValues","onSubmit","values","createProduct","updateProducts","setTabValue","createCategories","deleteCategories","React","tabValue","handleChangeTab","event","newValue","setFieldTouched","validateForm","Object","keys","length","handleSaveImages","formData","FormData","_","i","append","counter","setCounter","ImageUrl","image","createObjectURL","width","borderBottom","borderColor","onChange","handleSubmit","style","marginTop","container","spacing","item","xs","sm","md","lg","fullWidth","variant","handleChange","error","touched","Boolean","errors","helperText","autoFocus","disabled","type","multiline","htmlFor","className","split","paddingTop","control","checked","justifyContent","onClick","history","push","pathname","marginLeft","options","isMulti","isSearchable","actionType","action","ProductId","CategoryId","option","removedValue","isClearable","accept","multiple","encType","concat","Array","from","target","files","size","prevState","src","alt","flex","splice","removeData","duration","dispatch","SUCCESS_TOAST","payload","ERROR_TOAST"],"sourceRoot":""}